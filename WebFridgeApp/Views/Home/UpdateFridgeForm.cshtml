@model Fridge
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Fridge</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <label for="exampleFormControlSelect1">Chose Model</label>
            <select class="form-control" id="exampleFormControlSelect1" name="model_id">
                    @{
                        using HttpClient client = new HttpClient();
                        var result = await client.GetAsync($"{ViewBag.WebApiName}/Fridge/Models");
                        IEnumerable<FridgeModel> models = JsonSerializer.Deserialize<IEnumerable<FridgeModel>>(result.Content.ReadAsStringAsync().Result, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
                        foreach(FridgeModel mod in models)
                        {
                            <option value="@mod.Id">@mod.Name</option>
                        }
                    }
            </select>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @for = "exampleFormControlInput1" })
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Owner_Name, htmlAttributes: new { @for = "exampleFormControlInput1" })
            @Html.EditorFor(model => model.Owner_Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Owner_Name, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <input type="submit" value="Edit" class="btn btn-primary" />
        </div>
    </div>
}